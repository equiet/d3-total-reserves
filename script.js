// Generated by CoffeeScript 1.6.2
(function() {
  var PI, arc, arcWrapper, currentYear, format, height, hover, outerRadius, parseData, roundScale, svg, title, tooltipName, tooltipReserve, unhover, width, years;

  width = 600;

  height = 600;

  outerRadius = 200;

  PI = 3.1415;

  roundScale = d3.scale.linear().domain([0, 1]).range([0, 360]);

  currentYear = 1970;

  years = d3.range(1970, 2011 + 1);

  svg = d3.select("svg").attr("width", width).attr("height", height).append("g");

  arcWrapper = svg.append("g").attr("class", "arcWrapper").attr("transform", "translate(" + (width / 2) + "," + (height / 2 + 20) + ")");

  title = svg.append("text").attr("class", "title").attr("dy", "1em").text(currentYear);

  tooltipName = svg.append("text").attr("class", "tooltip-name").attr("x", width / 2).attr("y", height / 2 + 20);

  tooltipReserve = svg.append("text").attr("class", "tooltip-reserve").attr("x", width / 2).attr("y", height / 2 + 20).attr("dy", "1.6em");

  format = function(number) {
    return "$ " + number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
  };

  parseData = function(input, currentYear) {
    var output, sum;

    output = [];
    sum = 0;
    input.forEach(function(d, i) {
      var value;

      value = parseInt(d[currentYear], 10) || 0;
      output.push({
        countryCode: d["Country_Code"],
        countryName: d["Country_Name"],
        reserve: value,
        start: sum,
        end: sum + value
      });
      return sum += value;
    });
    output.forEach(function(d, i) {
      d.start = d.start / sum;
      d.end = d.end / sum;
      return d.hue = i * 360 / output.length;
    });
    return output;
  };

  arc = function(extend) {
    if (extend == null) {
      extend = 0;
    }
    return d3.svg.arc().startAngle(function(d) {
      return d.start * 2 * PI - PI;
    }).endAngle(function(d) {
      return d.end * 2 * PI - PI;
    }).innerRadius(outerRadius - 80).outerRadius(outerRadius + extend);
  };

  hover = function(d) {
    d3.select(this).select("path").transition().duration(200).attr("d", arc(20));
    d3.select(this).selectAll("text").transition().duration(200).attr("y", -30);
    tooltipName.text(d.countryName);
    return tooltipReserve.text(format(d.reserve));
  };

  unhover = function(d) {
    d3.select(this).select("path").transition().duration(200).attr("d", arc(0));
    d3.select(this).selectAll("text").transition().duration(200).attr("y", -10);
    tooltipName.text("");
    return tooltipReserve.text("");
  };

  d3.csv("countries.csv", function(error, data) {
    var arcs, currentData, decreaseYear, increaseYear, leftButton, rightButton, update;

    currentData = parseData(data, currentYear);
    arcs = arcWrapper.selectAll(".arc").data(currentData).enter().append("g").attr("class", "arc").on("mouseover", hover).on("mouseout", unhover);
    arcs.append("path");
    arcs.append("text");
    update = function() {
      title.text(currentYear);
      currentData = parseData(data, currentYear);
      arcWrapper.selectAll(".arc").data(currentData);
      arcWrapper.selectAll("path").data(currentData).transition().duration(500).attr("d", arc(0)).attr("fill", function(d, i) {
        return "hsl(" + d.hue + ", 60%, " + (i % 2 * 2 + 40) + "%)";
      }).attr("stroke", function(d, i) {
        return "hsl(" + d.hue + ", 60%, " + (i % 2 * 2 + 40) + "%)";
      });
      return arcWrapper.selectAll("text").data(currentData).transition().duration(500).attr("opacity", function(d, i) {
        return (d.end - d.start) * 20;
      }).attr("y", -10).text(function(d, i) {
        return d.countryCode;
      }).attr("transform", function(d, i) {
        return "rotate(" + ((d.start + d.end) / 2 * 360 + 180) + ") translate(0, " + (-outerRadius) + ")";
      });
    };
    update();
    leftButton = document.querySelector(".button.left");
    rightButton = document.querySelector(".button.right");
    increaseYear = function() {
      currentYear = Math.min(d3.max(years), currentYear + 1);
      if (d3.max(years) === currentYear) {
        rightButton.classList.add("disabled");
      }
      leftButton.classList.remove("disabled");
      return update();
    };
    decreaseYear = function() {
      currentYear = Math.max(d3.min(years), currentYear - 1);
      if (d3.min(years) === currentYear) {
        leftButton.classList.add("disabled");
      }
      rightButton.classList.remove("disabled");
      return update();
    };
    window.focus();
    d3.select(window).on("keydown", function() {
      switch (d3.event.keyCode) {
        case 37:
          decreaseYear();
          break;
        case 39:
          increaseYear();
          break;
      }
    });
    leftButton.on("click", function() {
      return decreaseYear();
    });
    return rightButton.on("click", function() {
      return increaseYear();
    });
  });

}).call(this);

/*
//@ sourceMappingURL=script.map
*/
